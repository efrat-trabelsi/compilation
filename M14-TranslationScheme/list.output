Grammar

    0 $accept: S $end

    1 $@1: /* empty */

    2 S: ITEM $@1 ';'

    3 $@2: /* empty */

    4 L: '[' ITEMLIST ']' $@2 ';'

    5 $@3: /* empty */

    6 L: TAIL '(' L ')' $@3 ';'

    7 $@4: /* empty */

    8 L: APPEND '(' ITEM ',' L ')' $@4 ';'

    9 $@5: /* empty */

   10 L: DIVIDE '(' ITEM ',' L ')' $@5 ';'

   11 $@6: /* empty */

   12 ITEMLIST: ITEMLIST ',' ITEM $@6 ';'

   13 $@7: /* empty */

   14 ITEMLIST: ITEM $@7 ';'

   15 $@8: /* empty */

   16 ITEM: SUM '(' L ')' $@8 ';'

   17 $@9: /* empty */

   18 ITEM: EQUAL '(' L ')' $@9 ';'

   19 $@10: /* empty */

   20 ITEM: NUMBER $@10 ';'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 8 10 16 18
')' (41) 6 8 10 16 18
',' (44) 8 10 12
';' (59) 2 4 6 8 10 12 14 16 18 20
'[' (91) 4
']' (93) 4
error (256)
NUMBER (258) 20
EQUAL (259) 18
SUM (260) 16
APPEND (261) 8
TAIL (262) 6
DIVIDE (263) 10


Nonterminals, with rules where they appear

$accept (15)
    on left: 0
S (16)
    on left: 2, on right: 0
$@1 (17)
    on left: 1, on right: 2
L (18)
    on left: 4 6 8 10, on right: 6 8 10 16 18
$@2 (19)
    on left: 3, on right: 4
$@3 (20)
    on left: 5, on right: 6
$@4 (21)
    on left: 7, on right: 8
$@5 (22)
    on left: 9, on right: 10
ITEMLIST (23)
    on left: 12 14, on right: 4 12
$@6 (24)
    on left: 11, on right: 12
$@7 (25)
    on left: 13, on right: 14
ITEM (26)
    on left: 16 18 20, on right: 2 8 10 12 14
$@8 (27)
    on left: 15, on right: 16
$@9 (28)
    on left: 17, on right: 18
$@10 (29)
    on left: 19, on right: 20


State 0

    0 $accept: . S $end

    NUMBER  shift, and go to state 1
    EQUAL   shift, and go to state 2
    SUM     shift, and go to state 3

    S     go to state 4
    ITEM  go to state 5


State 1

   20 ITEM: NUMBER . $@10 ';'

    $default  reduce using rule 19 ($@10)

    $@10  go to state 6


State 2

   18 ITEM: EQUAL . '(' L ')' $@9 ';'

    '('  shift, and go to state 7


State 3

   16 ITEM: SUM . '(' L ')' $@8 ';'

    '('  shift, and go to state 8


State 4

    0 $accept: S . $end

    $end  shift, and go to state 9


State 5

    2 S: ITEM . $@1 ';'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 10


State 6

   20 ITEM: NUMBER $@10 . ';'

    ';'  shift, and go to state 11


State 7

   18 ITEM: EQUAL '(' . L ')' $@9 ';'

    APPEND  shift, and go to state 12
    TAIL    shift, and go to state 13
    DIVIDE  shift, and go to state 14
    '['     shift, and go to state 15

    L  go to state 16


State 8

   16 ITEM: SUM '(' . L ')' $@8 ';'

    APPEND  shift, and go to state 12
    TAIL    shift, and go to state 13
    DIVIDE  shift, and go to state 14
    '['     shift, and go to state 15

    L  go to state 17


State 9

    0 $accept: S $end .

    $default  accept


State 10

    2 S: ITEM $@1 . ';'

    ';'  shift, and go to state 18


State 11

   20 ITEM: NUMBER $@10 ';' .

    $default  reduce using rule 20 (ITEM)


State 12

    8 L: APPEND . '(' ITEM ',' L ')' $@4 ';'

    '('  shift, and go to state 19


State 13

    6 L: TAIL . '(' L ')' $@3 ';'

    '('  shift, and go to state 20


State 14

   10 L: DIVIDE . '(' ITEM ',' L ')' $@5 ';'

    '('  shift, and go to state 21


State 15

    4 L: '[' . ITEMLIST ']' $@2 ';'

    NUMBER  shift, and go to state 1
    EQUAL   shift, and go to state 2
    SUM     shift, and go to state 3

    ITEMLIST  go to state 22
    ITEM      go to state 23


State 16

   18 ITEM: EQUAL '(' L . ')' $@9 ';'

    ')'  shift, and go to state 24


State 17

   16 ITEM: SUM '(' L . ')' $@8 ';'

    ')'  shift, and go to state 25


State 18

    2 S: ITEM $@1 ';' .

    $default  reduce using rule 2 (S)


State 19

    8 L: APPEND '(' . ITEM ',' L ')' $@4 ';'

    NUMBER  shift, and go to state 1
    EQUAL   shift, and go to state 2
    SUM     shift, and go to state 3

    ITEM  go to state 26


State 20

    6 L: TAIL '(' . L ')' $@3 ';'

    APPEND  shift, and go to state 12
    TAIL    shift, and go to state 13
    DIVIDE  shift, and go to state 14
    '['     shift, and go to state 15

    L  go to state 27


State 21

   10 L: DIVIDE '(' . ITEM ',' L ')' $@5 ';'

    NUMBER  shift, and go to state 1
    EQUAL   shift, and go to state 2
    SUM     shift, and go to state 3

    ITEM  go to state 28


State 22

    4 L: '[' ITEMLIST . ']' $@2 ';'
   12 ITEMLIST: ITEMLIST . ',' ITEM $@6 ';'

    ']'  shift, and go to state 29
    ','  shift, and go to state 30


State 23

   14 ITEMLIST: ITEM . $@7 ';'

    $default  reduce using rule 13 ($@7)

    $@7  go to state 31


State 24

   18 ITEM: EQUAL '(' L ')' . $@9 ';'

    $default  reduce using rule 17 ($@9)

    $@9  go to state 32


State 25

   16 ITEM: SUM '(' L ')' . $@8 ';'

    $default  reduce using rule 15 ($@8)

    $@8  go to state 33


State 26

    8 L: APPEND '(' ITEM . ',' L ')' $@4 ';'

    ','  shift, and go to state 34


State 27

    6 L: TAIL '(' L . ')' $@3 ';'

    ')'  shift, and go to state 35


State 28

   10 L: DIVIDE '(' ITEM . ',' L ')' $@5 ';'

    ','  shift, and go to state 36


State 29

    4 L: '[' ITEMLIST ']' . $@2 ';'

    $default  reduce using rule 3 ($@2)

    $@2  go to state 37


State 30

   12 ITEMLIST: ITEMLIST ',' . ITEM $@6 ';'

    NUMBER  shift, and go to state 1
    EQUAL   shift, and go to state 2
    SUM     shift, and go to state 3

    ITEM  go to state 38


State 31

   14 ITEMLIST: ITEM $@7 . ';'

    ';'  shift, and go to state 39


State 32

   18 ITEM: EQUAL '(' L ')' $@9 . ';'

    ';'  shift, and go to state 40


State 33

   16 ITEM: SUM '(' L ')' $@8 . ';'

    ';'  shift, and go to state 41


State 34

    8 L: APPEND '(' ITEM ',' . L ')' $@4 ';'

    APPEND  shift, and go to state 12
    TAIL    shift, and go to state 13
    DIVIDE  shift, and go to state 14
    '['     shift, and go to state 15

    L  go to state 42


State 35

    6 L: TAIL '(' L ')' . $@3 ';'

    $default  reduce using rule 5 ($@3)

    $@3  go to state 43


State 36

   10 L: DIVIDE '(' ITEM ',' . L ')' $@5 ';'

    APPEND  shift, and go to state 12
    TAIL    shift, and go to state 13
    DIVIDE  shift, and go to state 14
    '['     shift, and go to state 15

    L  go to state 44


State 37

    4 L: '[' ITEMLIST ']' $@2 . ';'

    ';'  shift, and go to state 45


State 38

   12 ITEMLIST: ITEMLIST ',' ITEM . $@6 ';'

    $default  reduce using rule 11 ($@6)

    $@6  go to state 46


State 39

   14 ITEMLIST: ITEM $@7 ';' .

    $default  reduce using rule 14 (ITEMLIST)


State 40

   18 ITEM: EQUAL '(' L ')' $@9 ';' .

    $default  reduce using rule 18 (ITEM)


State 41

   16 ITEM: SUM '(' L ')' $@8 ';' .

    $default  reduce using rule 16 (ITEM)


State 42

    8 L: APPEND '(' ITEM ',' L . ')' $@4 ';'

    ')'  shift, and go to state 47


State 43

    6 L: TAIL '(' L ')' $@3 . ';'

    ';'  shift, and go to state 48


State 44

   10 L: DIVIDE '(' ITEM ',' L . ')' $@5 ';'

    ')'  shift, and go to state 49


State 45

    4 L: '[' ITEMLIST ']' $@2 ';' .

    $default  reduce using rule 4 (L)


State 46

   12 ITEMLIST: ITEMLIST ',' ITEM $@6 . ';'

    ';'  shift, and go to state 50


State 47

    8 L: APPEND '(' ITEM ',' L ')' . $@4 ';'

    $default  reduce using rule 7 ($@4)

    $@4  go to state 51


State 48

    6 L: TAIL '(' L ')' $@3 ';' .

    $default  reduce using rule 6 (L)


State 49

   10 L: DIVIDE '(' ITEM ',' L ')' . $@5 ';'

    $default  reduce using rule 9 ($@5)

    $@5  go to state 52


State 50

   12 ITEMLIST: ITEMLIST ',' ITEM $@6 ';' .

    $default  reduce using rule 12 (ITEMLIST)


State 51

    8 L: APPEND '(' ITEM ',' L ')' $@4 . ';'

    ';'  shift, and go to state 53


State 52

   10 L: DIVIDE '(' ITEM ',' L ')' $@5 . ';'

    ';'  shift, and go to state 54


State 53

    8 L: APPEND '(' ITEM ',' L ')' $@4 ';' .

    $default  reduce using rule 8 (L)


State 54

   10 L: DIVIDE '(' ITEM ',' L ')' $@5 ';' .

    $default  reduce using rule 10 (L)
